scraper 
    transaction rollbacks ignores

=====================================================

important articles widget
objectify front end widgets
links clean up,
exclude empty categs
sql transaction rollbacks/ignores
validation messages and settings
article view back to blog list by categ link
sticky nav
privilage fron tend backend terms
arrow at gethotelpage 1 2 3 4 page

Err handlin ===================
err types:
    Expected errs:
        1. page not found
            1. page not found by express router err => err-handler => 404 red
                after page request
            2. page not found in the db / err in page request route => curr module handle => 404 red
        2. User interaction errs
            1. ajax interaction errs caused by user => validation err => curr module handle => json answer to curr page -display err cause
            2. after user interaction post req => curr module handle => redirect to post request source page, displau user data - err cause

    Unexpected errs        
        backend errs 
            during get page request => err-handler => redirect to err 500 page
            during ajax request => err-handler => redirect to err 500 page
            during post request => err-handler => redirect to err 500 page

if in module an expected (user interaction realted - wrong link/wrong data sent) err happens => err handled in module
if in module unexpected (wrong logic/wrong code/service is down)  err happens => err handled by err-handler

err handlers:
        404 redirect on express router call
        500 redirect on in-module unexpected err => even if ajax or form user interaction call

There are expected errors which you want to log, but since you answered it in the route you can not use next so you need to silently log it

REST Representational state transfer ======================

resource based => uri-s are referring on the resource with the http verbs are happening
    stateless => 
        no clinet state on the server
        if there is state that is reserved on the client
        each request has enough context for the server to process request

    Representational 
        mean that the resource in what type gets represented to the client => csv, json, xml

    Unifor Interface
        uri-s are resource names
        http verbs are expressing what happens

    client-server disconnected system
        client shoudlnt know whom is it talking. Just uri and method
        Layered system
            between client and server can be more layers => middleware, router

    Cachable